<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>


	
	<name>Jillion</name>
	<description>An open source genomics software library written in Java to support sequence and assembly analysis</description>
	<url>http://jillion.sourceforge.net</url>
	
	
	<groupId>org.jcvi.jillion</groupId>
	<artifactId>jillion</artifactId>
	<version>5.1</version>
	<packaging>jar</packaging> <!-- OSGI compliant jar -->

	<properties>
		<powermock.version>1.6.2</powermock.version>
		<additionalparam>-Xdoclint:none</additionalparam>
		 <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    	<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>

	<!-- Jillion is an old project that used ant for 8 years so we have to configure 
		maven to use non-conventional folder structures -->
	<build>
		<sourceDirectory>src</sourceDirectory>
		<testSourceDirectory>test</testSourceDirectory>
		<resources>
			<resource>
				<directory>src</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
			</resources>
			 <testResources>
				<testResource>
					<directory>test</directory>
					<excludes>
						<exclude>**/*.java</exclude>
					</excludes>
				</testResource>
			</testResources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>findbugs-maven-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-jar-plugin</artifactId>
    <version>2.3.2</version>
    <configuration>
    <!-- include SVN revision number in output jar name -->
		
        <finalName>${project.artifactId}-${project.version}-r${buildNumber}</finalName>
         <archive>  
	      <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
	    </archive>           
    </configuration>
    
</plugin>   
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>3.0.2</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version> 2.18.1</version>
				<executions>
				<execution>
					<id>default-test</id> <!-- overrides default configuration (unit tests) -->
					<configuration>
						<includes>
							<include>org/jcvi/jillion/FastUnitTests.java</include>
						</includes>
					</configuration>
				</execution>
				
				<execution>
					<id>integration-test</id>
			          <goals>
			            <goal>test</goal>
			          </goals>
			          <phase>prepare-package</phase> <!--  only run these during before building jar since they take so long-->
					<configuration>
						<includes>
							<include>org/jcvi/jillion/SlowUnitTests.java</include>
						</includes>
					</configuration>
				</execution>
				
				
				</executions>
				
			</plugin>
		
	  <!--  		<plugin>
  <groupId>org.apache.maven.plugins</groupId>
   <artifactId>maven-checkstyle-plugin</artifactId>
   <version>2.16</version>
   <executions>
     <execution>
       <id>verify</id>
       <phase>verify</phase>
       <configuration>
         <configLocation>checkstyle_checks.modified.xml</configLocation>
         <encoding>UTF-8</encoding>
         <consoleOutput>true</consoleOutput>
         <failsOnError>false</failsOnError>
         <linkXRef>false</linkXRef>
       </configuration>
       <goals>
         <goal>check</goal>
       </goals>     
     </execution>
   </executions>
 </plugin>
   -->
			<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-pmd-plugin</artifactId>
			<version>3.5</version>
			</plugin>
	<plugin>
		<groupId>org.jacoco</groupId>
		<artifactId>jacoco-maven-plugin</artifactId>
		<version>0.7.5.201505241946</version>
		<executions>
			<execution>
				<id>default-prepare-agent</id>
				<goals>
					<goal>prepare-agent</goal>
				</goals>
			</execution>
			<execution>
				<id>default-report</id>
				<phase>prepare-package</phase>
				<goals>
					<goal>report</goal>
				</goals>
				
			</execution>
			<execution>
				<id>default-check</id>
				<goals>
					<goal>check</goal>
				</goals>
				<configuration>
	<rules><!-- implementation is needed only for Maven 2 -->
		<rule implementation="org.jacoco.maven.RuleConfiguration">
			<element>BUNDLE</element>
			<limits><!-- implementation is needed only for Maven 2 -->
				<limit implementation="org.jacoco.report.check.Limit">
					<counter>COMPLEXITY</counter>
					<value>COVEREDRATIO</value>
					<minimum>0.60</minimum>
				</limit>
			</limits>
		</rule>
	</rules>
</configuration>
			</execution>
		</executions>
	</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.3</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<doCheck>false</doCheck>
					<doUpdate>false</doUpdate>
				</configuration>
			</plugin>
			<!-- Used to make OSGI compatible bundles (jar modules) -->
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>2.5.4</version>
				<extensions>true</extensions>
				<executions>
				<execution>
				<id>bundle-manifest</id>
				<phase>process-classes</phase>
				<goals>
				<goal>manifest</goal>
				</goals>
				</execution>
				</executions>
				<configuration>
					<instructions>
					
						<Implementation-Build>${buildNumber}</Implementation-Build>
					</instructions>
				</configuration>		
			</plugin>			
			<plugin>
  <groupId>org.apache.maven.plugins</groupId>
  <artifactId>maven-source-plugin</artifactId>
  <version>2.4</version>
  <executions>
    <execution>
      <id>attach-sources</id>
      <goals>
        <goal>jar</goal>
      </goals>
    </execution>
  </executions>
</plugin>

<plugin>
  <groupId>org.apache.maven.plugins</groupId>
  <artifactId>maven-javadoc-plugin</artifactId>
  <version>2.10.3</version>
  <executions>
    <execution>
      <id>attach-javadocs</id>
      <goals>
        <goal>jar</goal>
      </goals>
    </execution>
    
  </executions>
  
  <configuration>
					<!-- force links to Java 8 documentation (should happen automatically 
						but doesn't) -->
					<javaApiLinks>
						<property>
							<name>api_1.8</name>
							<value>https://docs.oracle.com/javase/8/docs/api/</value>
						</property>
					</javaApiLinks>
					<tags>
						<tag>
							<name>apiNote</name>
							<placement>a</placement>
							<head>API Note:</head>
						</tag>
						<tag>
							<name>implSpec</name>
							<placement>a</placement>
							<head>Implementation Requirements:</head>
						</tag>
						<tag>
							<name>implNote</name>
							<placement>a</placement>
							<head>Implementation Note:</head>
						</tag>
						<tag><name>param</name></tag>
						<tag><name>return</name></tag>
						<tag><name>throws</name></tag>
						<tag><name>since</name></tag>
						<tag><name>version</name></tag>
						<tag><name>serialData</name></tag>
						<tag><name>see</name></tag>
					</tags>
					<!-- turn off Java 8's strict checking  which will fail the build if any javadoc problems
					http://blog.joda.org/2014/02/turning-off-doclint-in-jdk-8-javadoc.html
					-->
					<properties>
						<additionalparam>-Xdoclint:none</additionalparam>
					</properties>
				</configuration>
</plugin>

		</plugins>
	</build>
<reporting>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>3.0.2</version>
      </plugin>
      </plugins>
      </reporting>


	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.osgi.core</artifactId>
      <version>1.0.0</version>
    </dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.8.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>3.3.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-easymock</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>annotations</artifactId>
			<version>2.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

<developers>
<developer>
<name>Dan Katzel</name>
<organization>J. Craig Venter Institute</organization>
<organizationUrl>http://jcvi.org</organizationUrl>

</developer>
</developers>
<licenses>
	<license>
		<name>GNU LESSER GENERAL PUBLIC LICENSE, Version 2.1, February 1999</name>
		<url>http://www.gnu.org/licenses/lgpl-2.1.txt</url>
		<distribution>repo</distribution>
	</license>
</licenses>
	<scm>
		<connection>scn:svn:http://svn.code.sf.net/p/jillion/code/trunk</connection>
		<url>http://svn.code.sf.net/p/jillion/code/trunk</url>
	</scm>
	<organization>
		<name>J. Craig Venter Institute</name>
		<url>http://jcvi.org</url>
	</organization>
</project>