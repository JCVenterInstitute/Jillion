<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.jcvi.jillion.SlowUnitTests" time="182.018" tests="30" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-oracle/jre/lib/amd64"/>
    <property name="java.vm.version" value="25.144-b01"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/home/snettem/git/Jillion"/>
    <property name="java.runtime.version" value="1.8.0_144-b01"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-oracle/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/home/snettem/workspace/Jillion_WorkSpace/.metadata/.plugins/org.eclipse.m2e.launching/launches/m2conf7253004581074955687.tmp"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="4.10.0-28-generic"/>
    <property name="user.home" value="/home/snettem"/>
    <property name="user.timezone" value="America/New_York"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="user.name" value="snettem"/>
    <property name="java.class.path" value="/home/snettem/Software/eclipse/plugins/org.eclipse.m2e.maven.runtime_1.5.2.20150413-2214/jars/plexus-classworlds-2.5.1.jar"/>
    <property name="org.slf4j.simpleLogger.defaultLogLevel" value="info"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/lib/jvm/java-8-oracle/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher -B clean install"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_144"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/home/snettem/git/Jillion/EMBEDDED"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase name="useMementoToStartFromBeginning[0]" classname="org.jcvi.jillion.sam.TestBamParserImplementations" time="11.129"/>
  <testcase name="lastReferenceOnly[0]" classname="org.jcvi.jillion.sam.TestBamParserImplementations" time="9.212"/>
  <testcase name="innerReferenceOnly[0]" classname="org.jcvi.jillion.sam.TestBamParserImplementations" time="8.898"/>
  <testcase name="fromAll[0]" classname="org.jcvi.jillion.sam.TestBamParserImplementations" time="9.766"/>
  <testcase name="canAccept[0]" classname="org.jcvi.jillion.sam.TestBamParserImplementations" time="0"/>
  <testcase name="tryToParseUnknownReferenceShouldThrowIllegalArgException[0]" classname="org.jcvi.jillion.sam.TestBamParserImplementations" time="0.001"/>
  <testcase name="useMementoToStartFrom10000thRecord[0]" classname="org.jcvi.jillion.sam.TestBamParserImplementations" time="9.675"/>
  <testcase name="firstReferenceOnly[0]" classname="org.jcvi.jillion.sam.TestBamParserImplementations" time="8.902"/>
  <testcase name="firstReferenceOnlyBeginningOfAlignment[0]" classname="org.jcvi.jillion.sam.TestBamParserImplementations" time="9.607"/>
  <testcase name="nullVisitorShouldThrowNPE[0]" classname="org.jcvi.jillion.sam.TestBamParserImplementations" time="0"/>
  <testcase name="useMementoToStartFromBeginning[1]" classname="org.jcvi.jillion.sam.TestBamParserImplementations" time="9.71"/>
  <testcase name="lastReferenceOnly[1]" classname="org.jcvi.jillion.sam.TestBamParserImplementations" time="8.939"/>
  <testcase name="innerReferenceOnly[1]" classname="org.jcvi.jillion.sam.TestBamParserImplementations" time="9.337"/>
  <testcase name="fromAll[1]" classname="org.jcvi.jillion.sam.TestBamParserImplementations" time="9.554"/>
  <testcase name="canAccept[1]" classname="org.jcvi.jillion.sam.TestBamParserImplementations" time="0"/>
  <testcase name="tryToParseUnknownReferenceShouldThrowIllegalArgException[1]" classname="org.jcvi.jillion.sam.TestBamParserImplementations" time="0"/>
  <testcase name="useMementoToStartFrom10000thRecord[1]" classname="org.jcvi.jillion.sam.TestBamParserImplementations" time="9.429"/>
  <testcase name="firstReferenceOnly[1]" classname="org.jcvi.jillion.sam.TestBamParserImplementations" time="9.17"/>
  <testcase name="firstReferenceOnlyBeginningOfAlignment[1]" classname="org.jcvi.jillion.sam.TestBamParserImplementations" time="8.904"/>
  <testcase name="nullVisitorShouldThrowNPE[1]" classname="org.jcvi.jillion.sam.TestBamParserImplementations" time="0"/>
  <testcase name="useMementoToStartFromBeginning[2]" classname="org.jcvi.jillion.sam.TestBamParserImplementations" time="9.844"/>
  <testcase name="lastReferenceOnly[2]" classname="org.jcvi.jillion.sam.TestBamParserImplementations" time="5.122"/>
  <testcase name="innerReferenceOnly[2]" classname="org.jcvi.jillion.sam.TestBamParserImplementations" time="4.983"/>
  <testcase name="fromAll[2]" classname="org.jcvi.jillion.sam.TestBamParserImplementations" time="10.018"/>
  <testcase name="canAccept[2]" classname="org.jcvi.jillion.sam.TestBamParserImplementations" time="0"/>
  <testcase name="tryToParseUnknownReferenceShouldThrowIllegalArgException[2]" classname="org.jcvi.jillion.sam.TestBamParserImplementations" time="0.002"/>
  <testcase name="useMementoToStartFrom10000thRecord[2]" classname="org.jcvi.jillion.sam.TestBamParserImplementations" time="9.665"/>
  <testcase name="firstReferenceOnly[2]" classname="org.jcvi.jillion.sam.TestBamParserImplementations" time="5.038"/>
  <testcase name="firstReferenceOnlyBeginningOfAlignment[2]" classname="org.jcvi.jillion.sam.TestBamParserImplementations" time="5.113"/>
  <testcase name="nullVisitorShouldThrowNPE[2]" classname="org.jcvi.jillion.sam.TestBamParserImplementations" time="0"/>
</testsuite>